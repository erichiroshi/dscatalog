GERAR O BUILD DA APP:
	
	.\mvnw clean package (Perfil test)
	.\mvnw clean package -DskipTests (Perfil dev e prod)
	
GERAR A IMAGEM:
	
	docker build -t dscatalog:v1 .

COMANDO PARA RODAR NO DOCKER:

PERFIL DEV:

	docker run -d -p 8080:8080 --name dev-dscatalog
	-e APP_PROFILE=dev
	-e DB_URL=jdbc:postgresql://dev-postgresql-12:5432/
	-e DB_USERNAME=postgres
	-e DB_PASSWORD=1234567
	-e AWS_KEY=???
	-e AWS_SECRET=???
	-e DSCATALOG_BUCKET_NAME=???
	-e DSCATALOG_BUCKET_REGION=???
	-e MJ_APIKEY_PUBLIC=???
	-e MJ_APIKEY_PRIVATE=???
	--network backend_dev-network
	dscatalog:v1
	
	
PERFIL PROD:

	docker run -d -p 8080:8080 --name prod-dscatalog
	-e APP_PROFILE=prod
	-e DB_URL=jdbc:postgresql://silly.db.elephantsql.com:5432/hkkvmfpa
	-e DB_USERNAME=hkkvmfpa
	-e DB_PASSWORD=cMEHoTcJRIVG1ACAkTGjAyGazYDPXXkz
	-e CLIENT_ID=dscatalog
	-e CLIENT_SECRET=dscatalog123
	-e JWT_SECRET=MY-JWT-SECRET
	-e JWT_DURATION=86400
	-e AWS_KEY=???
	-e AWS_SECRET=???
	-e DSCATALOG_BUCKET_NAME=???
	-e DSCATALOG_BUCKET_REGION=???
	-e MJ_APIKEY_PUBLIC=???
	-e MJ_APIKEY_PRIVATE=???
	dscatalog:v1

RODAR O SONARQUBE:

	docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest
		login: admin password: admin  -  criar projeto e pegar o token
	
	mvnw clean verify sonar:sonar
	-Dsonar.projectKey=dscatalog
	-Dsonar.projectName='dscatalog'
	-Dsonar.host.url=http://localhost:9000
	-Dsonar.token=???
